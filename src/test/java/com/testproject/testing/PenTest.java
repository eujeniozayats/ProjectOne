package com.testproject.testing;


import org.testng.annotations.*;
import org.testng.Assert;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;


public class PenTest {


    private final ByteArrayOutputStream output = new ByteArrayOutputStream();

    @DataProvider(name = "WriteOffData")
    public Object[][] createData1() {
        return new Object[][]{
                {3, "CutMe"},

        };
    }

    @DataProvider(name = "EmptyPen")
    public Object[][] createData2() {
        return new Object[][]{
                {0, "CutMe", ""},

        };
    }

    @Parameters({"defaultInkValues"})
    @Test
    public void testFirstConstructor(int defaultInkValues) {
        Pen pen = new Pen(defaultInkValues);
        Assert.assertEquals(pen.getInkContainerValue(), defaultInkValues);


    }

    @Parameters({"defaultInkValues", "defaultSizeLetter"})
    @Test
    public void testSecondConstructor(int defaultInkValues, double defaultSizeLetter) {
        Pen pen = new Pen(defaultInkValues, defaultSizeLetter);
        Assert.assertEquals(pen.getInkContainerValue(), defaultInkValues);
        Assert.assertEquals(pen.getSizeLetter(), defaultSizeLetter);

    }

    @Parameters({"defaultInkValues", "defaultSizeLetter", "defaultColor"})
    @Test
    public void testThirdConstructor(int defaultInkValues, double defaultSizeLetter, String defaultColor) {
        Pen pen = new Pen(defaultInkValues, defaultSizeLetter, defaultColor);
        Assert.assertEquals(pen.getInkContainerValue(), defaultInkValues);
        Assert.assertEquals(pen.getSizeLetter(), defaultSizeLetter);
        Assert.assertEquals(pen.getColor(), defaultColor);


    }

    @Parameters({"defaultInkValues", "defaultSizeLetter", "defaultColor", "testWord"})
    @Test
    public void WriteOneWord(int defaultInkValues, double defaultSizeLetter, String defaultColor, String testWord) {
        Pen pen = new Pen(defaultInkValues, defaultSizeLetter, defaultColor);
        pen.write(testWord);
        Assert.assertTrue(pen.isWork());
        Assert.assertEquals(defaultColor, pen.getColor());


    }

    @Test(dataProvider = "WriteOffData")
    public void WriteOff(int inkContainerValue, String word) {
        Pen pen = new Pen(inkContainerValue);
        String wordCut = pen.write(word);
        Assert.assertFalse(pen.isWork());
        Assert.assertEquals(wordCut.length(), inkContainerValue);

    }

    @Test(dataProvider = "EmptyPen")
    public void EmptyPen(int inkContainerValue, String word, String emptyValue) {
        Pen pen = new Pen(inkContainerValue);
        String wordEmpty = pen.write(word);
        Assert.assertEquals(wordEmpty, emptyValue);

    }

    @Parameters({"defaultInkValues"})
    @Test
    public void doSomethingElse(int defaultInkValue) {
        System.setOut(new PrintStream(output));
        Pen pen = new Pen(defaultInkValue);
        pen.doSomethingElse();
        Assert.assertEquals(pen.getColor(), output.toString().trim());
    }


}

